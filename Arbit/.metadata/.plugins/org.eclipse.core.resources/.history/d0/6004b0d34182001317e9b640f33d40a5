import java.awt.Color;
import java.awt.Font;
import java.awt.FontFormatException;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.awt.event.MouseEvent;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;

import javax.swing.ImageIcon;


public class chatButtons {
	private PlayGame _root;
	private boolean light;
	private Image chat_dark = new ImageIcon("..//Data//chat_dark.png").getImage();
	private Image chat_light = new ImageIcon("..//Data//chat_light.png").getImage();
	public boolean visible=false;
	public int x=450;
	public int y;
	public String comments="0";
	private Font regFont;
	private Rectangle hitBox;
	public String id;
	public chatButtons(PlayGame playGame, boolean light, int chatY) {
		// TODO Auto-generated constructor stub
		this._root=playGame;
		this.light=light;
		this.y=chatY;
		try {
			this.regFont = Font.createFont(Font.TRUETYPE_FONT, new FileInputStream("..//Fonts//Biko_Regular.ttf"));
			this.regFont = this.regFont.deriveFont(Font.PLAIN, 12f);
    	} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (FontFormatException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		hitBox = new Rectangle(x+8,y+3,36,36);
	}
	public void draw(Graphics stage) {
		// TODO Auto-generated method stub
		if(Integer.parseInt(comments)==0){
			visible=false;
		}else{
			visible=true;
		}
		if(visible){
		if(light){
			stage.drawImage(chat_light,x-3,y,null);
		}else{
			stage.drawImage(chat_dark,x-3,y,null);
		}
		stage.setFont(regFont);
		stage.setColor(new Color(50,50,50));
		@SuppressWarnings("deprecation")
		FontMetrics fm = Toolkit.getDefaultToolkit().getFontMetrics(stage.getFont());
    	int w = fm.stringWidth(comments);
		stage.drawString(comments,x+28-w,y+40);
		}
		//drawRect(hitBox,stage);
	}
	
	public void checkClicked(MouseEvent m) {
		int mouseX= m.getX();
		int mouseY= m.getY();
		if(StorySelection.vacancy && visible && mouseX>hitBox.x && mouseX<hitBox.x+hitBox.width && mouseY>hitBox.y && mouseY<hitBox.y+hitBox.height){
			openComments();
		}
	}
	private void openComments() {
		StorySelection.vacancy=false;
		_root.comments = new Comments(_root,id);
	}
	
	@SuppressWarnings("unused")
	private void drawRect(Rectangle rect, Graphics stage) {
		stage.fillRect(rect.x,rect.y,rect.width,rect.height);
	}
	@SuppressWarnings("unused")
	private void trace(String string) {
		System.out.println(string);
	}

}
