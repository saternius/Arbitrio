import java.awt.Color;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;

import javax.swing.ImageIcon;


public class Vars {
	Image new_var = new ImageIcon("..//Data//create_var.png").getImage();
	Image var_set = new ImageIcon("..//Data//varSettings.png").getImage(); 
	Image glow_pane = new ImageIcon("..//Data//variablePaneGlow.png").getImage(); 
	Image name_glow = new ImageIcon("..//Data//varNameGlow.png").getImage();
	Image type_opts = new ImageIcon("..//Data//type_opts.png").getImage();
	public int x;
	public int y;
	public boolean focused;
	public Variables _root;
	public Image pane = new_var;
	public boolean newbie = true;
	private Functions funk = new Functions();
	Rectangle rect;
	Rectangle close;
	Rectangle name; 
	Rectangle type;
	Rectangle value; 
	String name_str="Name";
	String type_str="Boolean";
	String value_str="True";
	Fonts font = new Fonts();
	private boolean name_highlight=false;
	private boolean type_highlight=false;
	String box1="Number";
	String box2="Text";
	Rectangle Box1;
	Rectangle Box2;
	int text_shift = 0;
	
	public Vars(int x, int y, Variables parent){
		this.x = x;
		this.y = y;
		this._root = parent;
		rect = new Rectangle(x,y+5,380, 27);
		close = new Rectangle(x+355,y+5,30, 27);
		name = new Rectangle(x+2,y+5,95, 27);
		type = new Rectangle(x+105,y+5,95, 27);
		value = new Rectangle(x+210,y+5,140, 27);
	}
	public void draw(Graphics stage) {
		if(newbie){
			stage.drawImage(new_var,x,y,null);
		}else{
			if(focused){
				stage.drawImage(glow_pane,x-3,y-3,null);
			}else{
				stage.drawImage(var_set,x,y,null);
			}
			
			if(name_highlight){
				stage.drawImage(name_glow,x+1,y,null);
			}
			if(type_highlight){
				stage.drawImage(type_opts,x+106,y+24,null);
				stage.drawString(box1,x+125,y+41);
				stage.drawString(box2,x+137+text_shift,y+63);
			}
			font.setSize(16);
			stage.setFont(font.regFont);
			FontMetrics fm = Toolkit.getDefaultToolkit().getFontMetrics(font.regFont);
			int w = fm.stringWidth(name_str);
			stage.drawString(name_str, x+48-(w/2), y+18);
			w = fm.stringWidth(type_str);
			stage.drawString(type_str,x+153-(w/2),y+18);
			w = fm.stringWidth(value_str);
			stage.drawString(value_str,x+275-(w/2),y+18);
		}
		
		
	}
	public void mousePressed(MouseEvent m) {
		int mouseX = m.getX();
		int mouseY = m.getY();
		
			Rectangle recty = new Rectangle(rect.x,rect.y,rect.width-232,rect.height);
			if(newbie && funk.hitTest(recty, mouseX, mouseY)){
				pane=var_set;
				newbie=false;
				y+=6;
				_root.clearFocused();
				focused = true;
			}
			if(!newbie){
				if(type_highlight){
					if(funk.hitTest(Box1, mouseX, mouseY)){
						if(type_str.equals("Boolean")){
							type_str = "Number";
							box1="Boolean";
							box2="Text";
							text_shift=0;
						}else if(type_str.equals("Number")){
							type_str ="Boolean";
							box1="Number";
							box2="Text";
						}else{
							type_str="Boolean";
							box1="Number";
							box2="Text";
						}
					}
					if(funk.hitTest(Box2, mouseX, mouseY)){
						if(type_str.equals("Boolean")){
							type_str = "Text";
							box1="Boolean";
							box2="Number";
							text_shift-=11;
						}else if(type_str.equals("Number")){
							type_str ="Text";
							box1="Boolean";
							box2="Number";
						}else{
							type_str="Number";
							box1="Boolean";
							box2="Text";
							text_shift=0;
						}
					}
				}else if(funk.hitTest(close, mouseX, mouseY)){
						pane=new_var;
						newbie=true;
						focused = false;
						y-=6;
				}else if(funk.hitTest(rect,mouseX,mouseY)){
					_root.clearFocused();
					focused=true;
				}else{
					focused=false;
				}
				if(focused){
					if(funk.hitTest(name,mouseX,mouseY)){
						name_highlight=true;
						
					}else{
						name_highlight=false;
					}
					
					if(funk.hitTest(type,mouseX,mouseY)){
						type_highlight=true;
						Box1 = new Rectangle(x+106,y+25,100,20);
						Box2 = new Rectangle(x+106,y+46,100,20);
						
					}else{
						type_highlight=false;
					}
				}
				if(!focused){
					name_highlight=false;
					type_highlight=false;
				}
			}
			
		}
	
	public void keyPressed(KeyEvent k) {
		if(name_highlight){
			name_str = funk.editString(k, name_str, 68, Fonts.regFont,"Name");
		}
	}

}
